
#ifndef DRIVERS_LAN9252_H_
#define DRIVERS_LAN9252_H_

#include "port/typedef_port.h"
#include "port/peripheral_port.hpp"

class LAN9252
{
	public:
		LAN9252(
				Port::SPIComm 	&spi,
				Port::CS 		&cs,
				Port::EXIT 		&spiIrq,
				Port::EXIT 		&sync0,
				Port::EXIT 		&sync1,
				Port::TIM		&tim
				);
		virtual ~LAN9252();

		#define BIT(x)                   (1U << (x))

		constexpr static uint8_t ESC_CMD_SERIAL_WRITE 	= 0x02;
		constexpr static uint8_t ESC_CMD_SERIAL_READ 	= 0x03;
		constexpr static uint8_t ESC_CMD_FAST_READ  	= 0x0B;
		constexpr static uint8_t ESC_CMD_RESET_SQI 		= 0xFF;
		constexpr static uint8_t ESC_CMD_FAST_READ_DUMMY= 0x01;

		void 		Write(uint16_t address, uint32_t val);
		uint32_t	Read(uint32_t address);

		void EscReadCsr(uint16_t address, void *buf, uint16_t len);
		void ESCWriteCsr(uint16_t address, void *buf, uint16_t len);

	private:
		Port::SPIComm 	&spi_;
		Port::CS 		&cs_;
		Port::EXIT		&spiIrq_;
		Port::EXIT		&sync0_;
		Port::EXIT		&sync1_;
		Port::TIM		&tim_;

		uint8_t 		spiTxData_[7];
		uint8_t 		spiRxData_[4];

		uint32_t 		regVal_;
};

#endif
